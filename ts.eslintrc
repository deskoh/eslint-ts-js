{
  "parser": "@typescript-eslint/parser",
  "env": {
    "es6": true,
    "node": true,
  },
  "extends": [
    "airbnb-base",
    "plugin:import/typescript",
  ],
  "plugins": ["@typescript-eslint"],
  "settings": {
    // Settings for eslint-plugin-import resolver
    "import/resolver": {
      // Settings for eslint-import-resolver-typescript to resolve TypeScript path mapping.
      "typescript": {},
    },
  },
  "parserOptions": {
    // Following parserOptions specified by airbnb-base
    // "ecmaVersion": 2018,
    // "sourceType": "module",
    // Options for @typescript-eslint/eslint-plugin
    "project": "./tsconfig.json",
  },
  "rules": {
    // Add rules in `typescript-eslint/recommended` without ESLint equivalent.
    // Customize rules with `airbnb` ESLint equivalent.
    "@typescript-eslint/adjacent-overload-signatures": "error",
    "@typescript-eslint/array-type": "error",
    "@typescript-eslint/ban-types": "error",
    "camelcase": "off",
    "@typescript-eslint/camelcase": ["error", { "properties": "never" }],
    "@typescript-eslint/class-name-casing": "error",
    "@typescript-eslint/explicit-function-return-type": "warn",
    "@typescript-eslint/explicit-member-accessibility": "error",
    "indent": "off",
    "@typescript-eslint/indent": ["error", 2, {
      "SwitchCase": 1,
      "VariableDeclarator": 1,
      "outerIIFEBody": 1,
      // MemberExpression: null,
      "FunctionDeclaration": {
        "parameters": 1,
        "body": 1
      },
      "FunctionExpression": {
        "parameters": 1,
        "body": 1
      },
      "CallExpression": {
        "arguments": 1
      },
      "ArrayExpression": 1,
      "ObjectExpression": 1,
      "ImportDeclaration": 1,
      "flatTernaryExpressions": false,
      // list derived from https://github.com/benjamn/ast-types/blob/HEAD/def/jsx.js
      "ignoredNodes": ["JSXElement", "JSXElement > *", "JSXAttribute", "JSXIdentifier", "JSXNamespacedName", "JSXMemberExpression", "JSXSpreadAttribute", "JSXExpressionContainer", "JSXOpeningElement", "JSXClosingElement", "JSXText", "JSXEmptyExpression", "JSXSpreadChild"],
      "ignoreComments": false
    }],
    "@typescript-eslint/interface-name-prefix": "error",
    "@typescript-eslint/member-delimiter-style": "error",
    "@typescript-eslint/no-angle-bracket-type-assertion": "error",
    "no-array-constructor": "off",
    "@typescript-eslint/no-array-constructor": "error",
    "@typescript-eslint/no-empty-interface": "error",
    "@typescript-eslint/no-explicit-any": "warn",
    "@typescript-eslint/no-inferrable-types": "error",
    "@typescript-eslint/no-misused-new": "error",
    "@typescript-eslint/no-namespace": "error",
    "@typescript-eslint/no-non-null-assertion": "error",
    "@typescript-eslint/no-object-literal-type-assertion": "error",
    "@typescript-eslint/no-parameter-properties": "error",
    "@typescript-eslint/no-triple-slash-reference": "error",
    "no-unused-vars": "off",
    "@typescript-eslint/no-unused-vars": ["error", { "vars": "all", "args": "after-used", "ignoreRestSiblings": true }],
    "no-use-before-define": "off",
    "@typescript-eslint/no-use-before-define": ["error", { "functions": true, "classes": true, "variables": true }],
    "@typescript-eslint/no-var-requires": "error",
    "@typescript-eslint/prefer-interface": "error",
    "@typescript-eslint/prefer-namespace-keyword": "error",
    "@typescript-eslint/type-annotation-spacing": "error",

    // Replace remaining `airbnb` rules by `typescript-eslint` equivalent if available
    "no-useless-constructor": "off",
    "@typescript-eslint/no-useless-constructor": "warn",
  },
  "overrides": [
    {
      "files": ["**/*.ts?(x)"],
      "extends": [
        // Disable ESLint rules `airbnb-base` checked by `tsc`.
        "plugin:@typescript-eslint/eslint-recommended",
      ],
      "rules": {
        // TypeScript's `noFallthroughCasesInSwitch` option is more robust
        "default-case": "off",
      }
    }
  ]
}
